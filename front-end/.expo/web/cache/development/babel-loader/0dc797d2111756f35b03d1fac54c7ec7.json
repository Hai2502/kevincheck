{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_TODOS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query Todos {\\n    todos {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar HomeScreen = function HomeScreen() {\n  var _useContext = useContext(AuthContext),\n      userSignout = _useContext.userSignout;\n\n  var _useQuery = useQuery(GET_TODOS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoCheck = _useState2[0],\n      setTodoCheck = _useState2[1];\n\n  useEffect(function () {\n    var todo;\n  });\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n  if (loading) return _jsx(Text, {\n    children: \"Loading...\"\n  });\n  if (error) return _jsx(Text, {\n    children: \"Error loading todos \"\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.Thead,\n      children: _jsx(Text, {\n        style: styles.headline,\n        children: \"TODO\"\n      })\n    }), _jsx(View, {\n      style: styles.todo_fetch,\n      children: data.todos.map(function (todo) {\n        return _jsxs(View, {\n          style: styles.todo_container,\n          children: [_jsx(View, {\n            style: styles.todo_item,\n            children: _jsx(Text, {\n              children: todo.description\n            })\n          }), _jsx(BouncyCheckbox, {\n            size: 25,\n            fillColor: \"blue\",\n            unfillColor: \"#FFFFFF\",\n            iconStyle: {\n              borderColor: \"blue\"\n            },\n            textStyle: {\n              fontFamily: \"JosefinSans-Regular\"\n            },\n            onPress: function onPress(isChecked) {}\n          })]\n        }, todo.id);\n      })\n    }), _jsxs(View, {\n      style: styles.Tbottom,\n      children: [_jsx(Button, {\n        title: \"add todo\",\n        onPress: userSignout\n      }), _jsx(Button, {\n        testID: \"btn-signout\",\n        title: \"LOG OUT\",\n        onPress: userSignout\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/kevincheck/front-end/src/screens/postAuthScreens/home/homeScreen.tsx"],"names":["React","useContext","useState","useEffect","AuthContext","styles","useQuery","gql","BouncyCheckbox","GET_TODOS","HomeScreen","userSignout","loading","error","data","todoCheck","setTodoCheck","todo","console","log","container","Thead","headline","todo_fetch","todos","map","todo_container","todo_item","description","borderColor","fontFamily","isChecked","id","Tbottom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAEA,IAAMC,SAAS,GAAGF,GAAH,qKAAf;;AAUA,IAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,oBAAwBT,UAAU,CAACG,WAAD,CAAlC;AAAA,MAAQO,WAAR,eAAQA,WAAR;;AACA,kBAAiCL,QAAQ,CAACG,SAAD,CAAzC;AAAA,MAAQG,OAAR,aAAQA,OAAR;AAAA,MAAiBC,KAAjB,aAAiBA,KAAjB;AAAA,MAAwBC,IAAxB,aAAwBA,IAAxB;;AACA,kBAAkCZ,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,IAAJ;AACD,GAFQ,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,IAAtB;AAEA,MAAIF,OAAJ,EAAa,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AAEX,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACe,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACgB,KAApB;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACiB,QAApB;AAAA;AAAA;AADF,MADF,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEjB,MAAM,CAACkB,UAApB;AAAA,gBACGT,IAAI,CAACU,KAAL,CAAWC,GAAX,CAAe,UAACR,IAAD;AAAA,eACd,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEZ,MAAM,CAACqB,cAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAErB,MAAM,CAACsB,SAApB;AAAA,sBACE,KAAC,IAAD;AAAA,wBAAOV,IAAI,CAACW;AAAZ;AADF,YADF,EAKE,KAAC,cAAD;AACE,YAAA,IAAI,EAAE,EADR;AAEE,YAAA,SAAS,EAAC,MAFZ;AAGE,YAAA,WAAW,EAAC,SAHd;AAIE,YAAA,SAAS,EAAE;AAAEC,cAAAA,WAAW,EAAE;AAAf,aAJb;AAKE,YAAA,SAAS,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aALb;AAME,YAAA,OAAO,EAAE,iBAACC,SAAD,EAAwB,CAAE;AANrC,YALF;AAAA,WAAyCd,IAAI,CAACe,EAA9C,CADc;AAAA,OAAf;AADH,MALF,EAwBE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE3B,MAAM,CAAC4B,OAApB;AAAA,iBACE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAEtB;AAAlC,QADF,EAEE,KAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAC,SAAnC;AAA6C,QAAA,OAAO,EAAEA;AAAtD,QAFF;AAAA,MAxBF;AAAA,IADF;AA+BD,CA7CD;;AA8CA,eAAeD,UAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { View, Text, Button } from \"react-native\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\n\nconst GET_TODOS = gql`\n  query Todos {\n    todos {\n      id\n      description\n      isFinished\n    }\n  }\n`;\n\nconst HomeScreen = () => {\n  const { userSignout } = useContext(AuthContext);\n  const { loading, error, data } = useQuery(GET_TODOS);\n  const [todoCheck, setTodoCheck] = useState([]);\n\n  useEffect(() => {\n    let todo\n  })\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error loading todos </Text>;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.Thead}>\n        <Text style={styles.headline}>TODO</Text>\n      </View>\n\n      <View style={styles.todo_fetch}>\n        {data.todos.map((todo) => (\n          <View style={styles.todo_container} key={todo.id}>\n            <View style={styles.todo_item}>\n              <Text>{todo.description}</Text>\n            </View>\n\n            <BouncyCheckbox\n              size={25}\n              fillColor=\"blue\"\n              unfillColor=\"#FFFFFF\"\n              iconStyle={{ borderColor: \"blue\" }}\n              textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\n              onPress={(isChecked: boolean) => {}}\n            />\n          </View>\n        ))}\n      </View>\n\n      <View style={styles.Tbottom}>\n        <Button title=\"add todo\" onPress={userSignout} />\n        <Button testID=\"btn-signout\" title=\"LOG OUT\" onPress={userSignout} />\n      </View>\n    </View>\n  );\n};\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}