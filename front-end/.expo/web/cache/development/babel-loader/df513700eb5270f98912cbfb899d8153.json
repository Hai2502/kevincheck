{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_TODOS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query Todos {\\n    todos {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar HomeScreen = function HomeScreen() {\n  var _useContext = useContext(AuthContext),\n      userSignout = _useContext.userSignout;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setSelection = _useState2[1];\n\n  var _useQuery = useQuery(GET_TODOS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n  if (loading) return _jsx(Text, {\n    children: \"Loading...\"\n  });\n  if (error) return _jsx(Text, {\n    children: \"Error loading todos \"\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.Thead,\n      children: _jsx(Text, {\n        style: styles.headline,\n        children: \"TODO\"\n      })\n    }), _jsx(View, {\n      style: styles.todo_fetch,\n      children: data.todos.map(function (todo) {\n        return _jsx(View, {\n          children: _jsx(CheckBox, {\n            value: isSelected,\n            onValueChange: setSelection,\n            style: styles.checkbox\n          })\n        });\n      })\n    }), _jsxs(View, {\n      style: styles.Tbottom,\n      children: [_jsx(Button, {\n        title: \"add todo\",\n        onPress: userSignout\n      }), _jsx(Button, {\n        testID: \"btn-signout\",\n        title: \"LOG OUT\",\n        onPress: userSignout\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/front-end/src/screens/postAuthScreens/home/homeScreen.tsx"],"names":["React","useContext","useState","AuthContext","styles","useQuery","gql","GET_TODOS","HomeScreen","userSignout","isSelected","setSelection","loading","error","data","console","log","container","Thead","headline","todo_fetch","todos","map","todo","checkbox","Tbottom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,IAAMC,SAAS,GAAGD,GAAH,qKAAf;;AASA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,oBAAwBP,UAAU,CAACE,WAAD,CAAlC;AAAA,MAAQM,WAAR,eAAQA,WAAR;;AACA,kBAAmCP,QAAQ,CAAC,KAAD,CAA3C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,YAAnB;;AACA,kBAAiCN,QAAQ,CAACE,SAAD,CAAzC;AAAA,MAAQK,OAAR,aAAQA,OAAR;AAAA,MAAiBC,KAAjB,aAAiBA,KAAjB;AAAA,MAAwBC,IAAxB,aAAwBA,IAAxB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AAEA,MAAIF,OAAJ,EAAa,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AAEX,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACa,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACc,KAApB;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe,QAApB;AAAA;AAAA;AADF,MADF,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACgB,UAApB;AAAA,gBACGN,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAe,UAACC,IAAD;AAAA,eACd,KAAC,IAAD;AAAA,oBAGE,KAAC,QAAD;AACE,YAAA,KAAK,EAAEb,UADT;AAEE,YAAA,aAAa,EAAEC,YAFjB;AAGE,YAAA,KAAK,EAAEP,MAAM,CAACoB;AAHhB;AAHF,UADc;AAAA,OAAf;AADH,MALF,EAoBE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEpB,MAAM,CAACqB,OAApB;AAAA,iBACE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAEhB;AAAlC,QADF,EAEE,KAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAC,SAAnC;AAA6C,QAAA,OAAO,EAAEA;AAAtD,QAFF;AAAA,MApBF;AAAA,IADF;AA2BD,CArCD;;AAsCA,eAAeD,UAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { View, Text, Button, CheckBox } from \"react-native\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_TODOS = gql`\n  query Todos {\n    todos {\n      id\n      description\n      isFinished\n    }\n  }\n`;\nconst HomeScreen = () => {\n  const { userSignout } = useContext(AuthContext);\n  const [isSelected, setSelection] = useState(false);\n  const { loading, error, data } = useQuery(GET_TODOS);\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error loading todos </Text>;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.Thead}>\n        <Text style={styles.headline}>TODO</Text>\n      </View>\n\n      <View style={styles.todo_fetch}>\n        {data.todos.map((todo) => (\n          <View>\n\n\n            <CheckBox\n              value={isSelected}\n              onValueChange={setSelection}\n              style={styles.checkbox}\n            />\n          </View>\n          \n        ))}\n      </View>\n\n      <View style={styles.Tbottom}>\n        <Button title=\"add todo\" onPress={userSignout} />\n        <Button testID=\"btn-signout\" title=\"LOG OUT\" onPress={userSignout} />\n      </View>\n    </View>\n  );\n};\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}