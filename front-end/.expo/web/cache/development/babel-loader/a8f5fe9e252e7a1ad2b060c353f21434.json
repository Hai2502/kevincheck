{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_TODOS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query Todos {\\n    todos {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useContext = useContext(AuthContext),\n      userSignout = _useContext.userSignout;\n\n  var _useQuery = useQuery(GET_TODOS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n  if (loading) return _jsx(Text, {\n    children: \"Loading...\"\n  });\n  if (error) return _jsx(Text, {\n    children: \"Error loading todos \"\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headline,\n      children: \"TODO\"\n    }), data.todos.map(function (todo) {\n      return _jsx(View, {}, dog.id);\n    }), _jsx(Button, {\n      testID: \"btn-signout\",\n      title: \"LOG OUT\",\n      onPress: userSignout\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/front-end/src/screens/postAuthScreens/home/homeScreen.tsx"],"names":["React","useContext","AuthContext","styles","useQuery","gql","GET_TODOS","HomeScreen","props","userSignout","loading","error","data","console","log","container","headline","todos","map","todo","dog","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,IAAMC,SAAS,GAAGD,GAAH,qKAAf;;AASA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,oBAAwBP,UAAU,CAACC,WAAD,CAAlC;AAAA,MAAQO,WAAR,eAAQA,WAAR;;AACA,kBAAiCL,QAAQ,CAACE,SAAD,CAAzC;AAAA,MAAQI,OAAR,aAAQA,OAAR;AAAA,MAAiBC,KAAjB,aAAiBA,KAAjB;AAAA,MAAwBC,IAAxB,aAAwBA,IAAxB;;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AAEA,MAAIF,OAAJ,EAAa,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AAEb,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACY,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACa,QAApB;AAAA;AAAA,MADF,EAEGJ,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,aAClB,KAAC,IAAD,MAAWC,GAAG,CAACC,EAAf,CADkB;AAAA,KAAnB,CAFH,EAOE,KAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAC,SAAnC;AAA6C,MAAA,OAAO,EAAEZ;AAAtD,MAPF;AAAA,IADF;AAWD,CApBD;;AAqBA,eAAeF,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { View, Text, Button } from \"react-native\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_TODOS = gql`\n  query Todos {\n    todos {\n      id\n      description\n      isFinished\n    }\n  }\n`;\nconst HomeScreen = (props) => {\n  const { userSignout } = useContext(AuthContext);\n  const { loading, error, data } = useQuery(GET_TODOS);\n    console.log(\"Error: \", error)\n    console.log(\"data: \", data)\n    \n    if (loading) return <Text>Loading...</Text>;\n    if (error) return <Text>Error loading todos </Text>;\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headline}>TODO</Text>\n      {data.todos.map(todo => (\n        <View key={dog.id}>\n\n        </View>\n      ))}\n      <Button testID=\"btn-signout\" title=\"LOG OUT\" onPress={userSignout} />\n    </View>\n  );\n};\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}