{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { gql } from \"@apollo/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ADD_TODO = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation AddTodo($description: String!) {\\n    addTodo(description: $description) {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar HomeScreen = function HomeScreen() {\n  var _useContext = useContext(AuthContext),\n      userSignout = _useContext.userSignout;\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.Thead,\n      children: _jsx(Text, {\n        style: styles.headline,\n        children: \"TODO\"\n      })\n    }), _jsxs(View, {\n      style: styles.Tbottom,\n      children: [_jsx(Button, {\n        title: \"add todo\",\n        onPress: userSignout\n      }), _jsx(Button, {\n        testID: \"btn-signout\",\n        title: \"LOG OUT\",\n        onPress: userSignout\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/kevincheck/front-end/src/screens/postAuthScreens/home/homeScreen.tsx"],"names":["React","useContext","AuthContext","styles","gql","ADD_TODO","HomeScreen","userSignout","container","Thead","headline","Tbottom"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT;AACA,SAAmBC,GAAnB,QAA2C,gBAA3C;;;AAMA,IAAMC,QAAQ,GAAGD,GAAH,8NAAd;;AAUA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,oBAAwBL,UAAU,CAACC,WAAD,CAAlC;AAAA,MAAQK,WAAR,eAAQA,WAAR;;AAGA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,KAApB;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA;AAAA;AADF,MADF,EAuBE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACQ,OAApB;AAAA,iBACE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAEJ;AAAlC,QADF,EAEE,KAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAC,SAAnC;AAA6C,QAAA,OAAO,EAAEA;AAAtD,QAFF;AAAA,MAvBF;AAAA,IADF;AA8BD,CAlCD;;AAmCA,eAAeD,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { View, Text, Button } from \"react-native\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport GetTodo from \"./getTodo\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\n\n\n\nconst ADD_TODO = gql`\n  mutation AddTodo($description: String!) {\n    addTodo(description: $description) {\n      id\n      description\n      isFinished\n    }\n  }\n`;\n\nconst HomeScreen = () => {\n  const { userSignout } = useContext(AuthContext);\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.Thead}>\n        <Text style={styles.headline}>TODO</Text>\n      </View>\n\n      {/* <View style={styles.todo_fetch}>\n        {data.todos.map((todo: { id: React.Key | null | undefined; description: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }) => (\n          <View style={styles.todo_container} key={todo.id}>\n            <View style={styles.todo_item}>\n              <Text>{todo.description}</Text>\n            </View>\n            <BouncyCheckbox\n              size={25}\n              fillColor=\"blue\"\n              unfillColor=\"#FFFFFF\"\n              iconStyle={{ borderColor: \"blue\" }}\n              textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\n              onPress={(isChecked: boolean) => {}}\n            />\n          </View>\n        ))}\n      </View> */}\n\n      <View style={styles.Tbottom}>\n        <Button title=\"add todo\" onPress={userSignout} />\n        <Button testID=\"btn-signout\" title=\"LOG OUT\" onPress={userSignout} />\n      </View>\n    </View>\n  );\n};\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}