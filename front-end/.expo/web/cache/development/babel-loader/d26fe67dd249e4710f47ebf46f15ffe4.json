{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ADD_TODO = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation AddTodo($description: String!) {\\n    addTodo(description: $description) {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar AddTodo = function AddTodo() {\n  var input;\n\n  var _useMutation = useMutation(ADD_TODO),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addTodo = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var add = function add() {\n    addTodo({\n      variables: {\n        text: input.value\n      }\n    });\n    input.value = '';\n  };\n\n  if (loading) return 'Submitting...';\n  if (error) return \"Submission error! \" + error.message;\n  return _jsx(View, {\n    children: _jsx(Button, {\n      title: \"add todo\",\n      onPress: add\n    })\n  });\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/kevincheck/front-end/src/screens/postAuthScreens/home/addTodo.tsx"],"names":["React","useMutation","gql","ADD_TODO","AddTodo","input","addTodo","data","loading","error","add","variables","text","value","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;;;;AAGA,IAAMC,QAAQ,GAAGD,GAAH,8NAAd;;AAUA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB,MAAIC,KAAJ;;AACA,qBAA4CJ,WAAW,CAACE,QAAD,CAAvD;AAAA;AAAA,MAAOG,OAAP;AAAA;AAAA,MAAkBC,IAAlB,kBAAkBA,IAAlB;AAAA,MAAwBC,OAAxB,kBAAwBA,OAAxB;AAAA,MAAiCC,KAAjC,kBAAiCA,KAAjC;;AACA,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChBJ,IAAAA,OAAO,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAAb,KAAD,CAAP;AACAR,IAAAA,KAAK,CAACQ,KAAN,GAAc,EAAd;AACD,GAHD;;AAKA,MAAIL,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,8BAA4BA,KAAK,CAACK,OAAlC;AAEX,SACE,KAAC,IAAD;AAAA,cAEE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAEJ;AAAlC;AAFF,IADF;AAMD,CAlBD;;AAsBA,eAAeN,OAAf","sourcesContent":["import React from \"react\";\nimport { styles } from \"./homeScreen.style\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { View, TextI, Button } from \"react-native\";\n\nconst ADD_TODO = gql`\n  mutation AddTodo($description: String!) {\n    addTodo(description: $description) {\n      id\n      description\n      isFinished\n    }\n  }\n`;\n\nconst AddTodo = () => { \n\n  let input: { value: string; };\n  const [addTodo, { data, loading, error }] = useMutation(ADD_TODO);\n  const add = () => {\n    addTodo({ variables: { text: input.value } });\n    input.value = '';\n  }\n\n  if (loading) return 'Submitting...';\n  if (error) return `Submission error! ${error.message}`;\n\n  return (\n    <View>\n\n      <Button title=\"add todo\" onPress={add} />\n    </View>\n  )\n}\n\n\n\nexport default AddTodo;\n"]},"metadata":{},"sourceType":"module"}