{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React from \"react\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GET_TODOS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query Todos {\\n    todos {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar GetTodo = function GetTodo() {\n  var _useQuery = useQuery(GET_TODOS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n  if (loading) return _jsx(Text, {\n    children: \"Loading...\"\n  });\n  if (error) return _jsx(Text, {\n    children: \"Error loading todos \"\n  });\n\n  var onPress = function onPress(key) {\n    console.log(\"key\", key);\n  };\n\n  return _jsx(View, {\n    style: styles.todo_fetch,\n    children: data.todos.map(function (todo) {\n      return _jsx(View, {\n        style: styles.todo_container,\n        children: _jsx(View, {\n          style: styles.todo_item,\n          children: _jsx(Text, {\n            children: todo.description\n          })\n        })\n      }, todo.id);\n    })\n  });\n};\n\nexport default GetTodo;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/kevincheck/front-end/src/screens/postAuthScreens/home/getTodo.tsx"],"names":["React","styles","useQuery","gql","GET_TODOS","GetTodo","loading","error","data","console","log","onPress","key","todo_fetch","todos","map","todo","todo_container","todo_item","description","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;;AAIA,IAAMC,SAAS,GAAGD,GAAH,qKAAf;;AAUA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAAiCH,QAAQ,CAACE,SAAD,CAAzC;AAAA,MAAQE,OAAR,aAAQA,OAAR;AAAA,MAAiBC,KAAjB,aAAiBA,KAAjB;AAAA,MAAwBC,IAAxB,aAAwBA,IAAxB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AAEA,MAAIF,OAAJ,EAAa,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,KAAC,IAAD;AAAA;AAAA,IAAP;;AAEX,MAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAc;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,GAAnB;AACD,GAFD;;AAIA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,UAApB;AAAA,cACGL,IAAI,CAACM,KAAL,CAAWC,GAAX,CACC,UAACC,IAAD;AAAA,aAUE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,cAApB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEhB,MAAM,CAACiB,SAApB;AAAA,oBACE,KAAC,IAAD;AAAA,sBAAOF,IAAI,CAACG;AAAZ;AADF;AADF,SAAyCH,IAAI,CAACI,EAA9C,CAVF;AAAA,KADD;AADH,IADF;AA+BD,CA3CD;;AA6CA,eAAef,OAAf","sourcesContent":["import React from \"react\";\nimport { styles } from \"./homeScreen.style\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { View, Text } from \"react-native\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\n\nconst GET_TODOS = gql`\n  query Todos {\n    todos {\n      id\n      description\n      isFinished\n    }\n  }\n`;\n\nconst GetTodo = () => {\n  const { loading, error, data } = useQuery(GET_TODOS);\n  console.log(\"Error: \", error);\n  console.log(\"data: \", data);\n\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error loading todos </Text>;\n\n  const onPress = (key: any) => {\n    console.log(\"key\", key);\n  };\n\n  return (\n    <View style={styles.todo_fetch}>\n      {data.todos.map(\n        (todo: {\n          id: React.Key | null | undefined;\n          description:\n            | boolean\n            | React.ReactChild\n            | React.ReactFragment\n            | React.ReactPortal\n            | null\n            | undefined;\n        }) => (\n          <View style={styles.todo_container} key={todo.id}>\n            <View style={styles.todo_item}>\n              <Text>{todo.description}</Text>\n            </View>\n            {/* <BouncyCheckbox\n              size={25}\n              fillColor=\"blue\"\n              unfillColor=\"#FFFFFF\"\n              iconStyle={{ borderColor: \"blue\" }}\n              textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\n              onPress={(checked: boolean) => onPress())}\n            /> */}\n            \n          </View>\n        )\n      )}\n    </View>\n  );\n};\n\nexport default GetTodo;\n"]},"metadata":{},"sourceType":"module"}