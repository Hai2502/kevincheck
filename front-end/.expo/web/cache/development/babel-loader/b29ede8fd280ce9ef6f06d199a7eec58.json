{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport GetTodo from \"./getTodo\";\nimport AddTodo from \"./addTodo\";\nimport { gql } from \"@apollo/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DELETE_TODO = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation DeleteTodos($ids: [Int]!) {\\n    deleteTodos(ids: $ids) {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar HomeScreen = function HomeScreen() {\n  var _useContext = useContext(AuthContext),\n      userSignout = _useContext.userSignout;\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.Thead,\n      children: [_jsx(Text, {\n        style: styles.headline,\n        children: \"TODO\"\n      }), _jsx(GetTodo, {})]\n    }), _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        testID: \"btn-signout\",\n        style: styles.Button1,\n        onPress: userSignout,\n        children: _jsx(Text, {\n          style: {\n            color: \"#fff\"\n          },\n          children: \"LOG OUT\"\n        })\n      }), _jsx(TouchableOpacity, {\n        testID: \"btn-signout\",\n        style: styles.Button,\n        onPress: userSignout,\n        children: _jsx(Text, {\n          style: {\n            color: \"#fff\"\n          },\n          children: \"LOG OUT\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.Tbottom,\n      children: [_jsx(AddTodo, {}), _jsx(TouchableOpacity, {\n        testID: \"btn-signout\",\n        style: styles.Button1,\n        onPress: userSignout,\n        children: _jsx(Text, {\n          style: {\n            color: \"#fff\"\n          },\n          children: \"LOG OUT\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/kevincheck/front-end/src/screens/postAuthScreens/home/homeScreen.tsx"],"names":["React","useContext","AuthContext","styles","GetTodo","AddTodo","gql","DELETE_TODO","HomeScreen","userSignout","container","Thead","headline","Button1","color","Button","Tbottom"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,SAAsBC,GAAtB,QAAiC,gBAAjC;;;AAEA,IAAMC,WAAW,GAAGD,GAAH,6MAAjB;;AAUA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,oBAAwBP,UAAU,CAACC,WAAD,CAAlC;AAAA,MAAQO,WAAR,eAAQA,WAAR;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,SAApB;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACQ,KAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,QAApB;AAAA;AAAA,QADF,EAEE,KAAC,OAAD,KAFF;AAAA,MADF,EAME,MAAC,IAAD;AAAA,iBACE,KAAC,gBAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,KAAK,EAAET,MAAM,CAACU,OAFhB;AAGE,QAAA,OAAO,EAAEJ,WAHX;AAAA,kBAKE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AALF,QADF,EASE,KAAC,gBAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,KAAK,EAAEX,MAAM,CAACY,MAFhB;AAGE,QAAA,OAAO,EAAEN,WAHX;AAAA,kBAKE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AALF,QATF;AAAA,MANF,EAwBE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,MAAM,CAACa,OAApB;AAAA,iBACE,KAAC,OAAD,KADF,EAGE,KAAC,gBAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,KAAK,EAAEb,MAAM,CAACU,OAFhB;AAGE,QAAA,OAAO,EAAEJ,WAHX;AAAA,kBAKE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AALF,QAHF;AAAA,MAxBF;AAAA,IADF;AAsCD,CAzCD;;AA0CA,eAAeN,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport { styles } from \"./homeScreen.style\";\nimport GetTodo from \"./getTodo\";\nimport AddTodo from \"./addTodo\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst DELETE_TODO = gql`\n  mutation DeleteTodos($ids: [Int]!) {\n    deleteTodos(ids: $ids) {\n      id\n      description\n      isFinished\n    }\n  }\n`;\n\nconst HomeScreen = () => {\n  const { userSignout } = useContext(AuthContext);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.Thead}>\n        <Text style={styles.headline}>TODO</Text>\n        <GetTodo />\n      </View>\n\n      <View>\n        <TouchableOpacity\n          testID=\"btn-signout\"\n          style={styles.Button1}\n          onPress={userSignout}\n        >\n          <Text style={{ color: \"#fff\" }}>LOG OUT</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          testID=\"btn-signout\"\n          style={styles.Button}\n          onPress={userSignout}\n        >\n          <Text style={{ color: \"#fff\" }}>LOG OUT</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.Tbottom}>\n        <AddTodo />\n\n        <TouchableOpacity\n          testID=\"btn-signout\"\n          style={styles.Button1}\n          onPress={userSignout}\n        >\n          <Text style={{ color: \"#fff\" }}>LOG OUT</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}