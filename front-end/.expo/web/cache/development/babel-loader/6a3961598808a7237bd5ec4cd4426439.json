{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React, { useState } from \"react\";\nimport { styles } from \"./homeScreen.style\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ADD_TODO = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation AddTodo($description: String!) {\\n    addTodo(description: $description) {\\n      id\\n      description\\n      isFinished\\n    }\\n  }\\n\"])));\n\nvar AddTodo = function AddTodo() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useMutation = useMutation(ADD_TODO),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addTodo = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var add = function add() {\n    var todo = \"hahaah\";\n    console.log(todo);\n  };\n\n  if (loading) return \"Submitting...\";\n  if (error) return \"Submission error! \" + error.message;\n\n  var onEmailChange = function onEmailChange(value) {\n    setEmail(value);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Enter your email here..\",\n      value: input,\n      testID: \"emailInput\",\n      onChangeText: onInputChange,\n      style: styles.inputTodo\n    }), _jsx(Button, {\n      title: \"add todo\",\n      onPress: add\n    })]\n  });\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/kevincheck/kevincheck/front-end/src/screens/postAuthScreens/home/addTodo.tsx"],"names":["React","useState","styles","useMutation","gql","ADD_TODO","AddTodo","input","setInput","addTodo","data","loading","error","add","todo","console","log","message","onEmailChange","value","setEmail","onInputChange","inputTodo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;;;;;;AAGA,IAAMC,QAAQ,GAAGD,GAAH,8NAAd;;AAUA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,kBAA0BL,QAAQ,CAAS,EAAT,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,qBAA4CL,WAAW,CAACE,QAAD,CAAvD;AAAA;AAAA,MAAOI,OAAP;AAAA;AAAA,MAAkBC,IAAlB,kBAAkBA,IAAlB;AAAA,MAAwBC,OAAxB,kBAAwBA,OAAxB;AAAA,MAAiCC,KAAjC,kBAAiCA,KAAjC;;AACA,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,QAAIC,IAAI,GAAG,QAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAHD;;AAKA,MAAIH,OAAJ,EAAa,OAAO,eAAP;AACb,MAAIC,KAAJ,EAAW,8BAA4BA,KAAK,CAACK,OAAlC;;AAEX,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AACpCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,yBADd;AAEE,MAAA,KAAK,EAAEZ,KAFT;AAGE,MAAA,MAAM,EAAC,YAHT;AAIE,MAAA,YAAY,EAAEc,aAJhB;AAKE,MAAA,KAAK,EAAEnB,MAAM,CAACoB;AALhB,MADF,EAQE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAET;AAAlC,MARF;AAAA,IADF;AAYD,CA3BD;;AA6BA,eAAeP,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { styles } from \"./homeScreen.style\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { View, TextInput, Button } from \"react-native\";\n\nconst ADD_TODO = gql`\n  mutation AddTodo($description: String!) {\n    addTodo(description: $description) {\n      id\n      description\n      isFinished\n    }\n  }\n`;\n\nconst AddTodo = () => {\n  const [input, setInput] = useState<string>(\"\");\n  const [addTodo, { data, loading, error }] = useMutation(ADD_TODO);\n  const add = () => {\n    let todo = \"hahaah\";\n    console.log(todo);\n  };\n\n  if (loading) return \"Submitting...\";\n  if (error) return `Submission error! ${error.message}`;\n\n  const onEmailChange = (value: any) => {\n    setEmail(value);\n  };\n\n  return (\n    <View>\n      <TextInput\n        placeholder=\"Enter your email here..\"\n        value={input}\n        testID=\"emailInput\"\n        onChangeText={onInputChange}\n        style={styles.inputTodo}\n      />\n      <Button title=\"add todo\" onPress={add} />\n    </View>\n  );\n};\n\nexport default AddTodo;\n"]},"metadata":{},"sourceType":"module"}